name: 'Build Images'

on:
  push:
    paths:
    - '**'
    - '!README.md'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          set -x
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}
          SHORTREF=${GITHUB_SHA::8}

          # If this is a branch, use the branch name as a docker tag
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            BRANCH=${GITHUB_REF#refs/heads/}

            case $BRANCH in
              "main" | "master" )
                  BRANCHTAG="${DOCKER_IMAGE}:latest"
                ;;
              "develop" )
                  BRANCHTAG="${DOCKER_IMAGE}:develop"
                ;;
              * )
                  BRANCHTAG="${DOCKER_IMAGE}:${BRANCH},${DOCKER_IMAGE}:${BRANCH}-latest"
                ;;
            esac
          fi

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            GITTAG="${DOCKER_IMAGE}:${GITHUB_REF#refs/tags/v}"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          set -x
          pwd
          ls -l
          if [ -f "Dockerfile" ] ; then
            echo "adding git_repository"
            sed -i "/FROM .*\/.*/a LABEL git_repository=\"${GITHUB_REPOSITORY}\"" Dockerfile
            echo "adding git_commit"
            sed -i "/FROM .*\/.*/a LABEL git_commit=\"${GITHUB_SHA}\"" Dockerfile
            echo "adding git_committed by"
            sed -i "/FROM .*\/.*/a LABEL git_committed_by:=\"${GITHUB_ACTOR}\"" Dockerfile
            echo "adding image_build_date"
            sed -i "/FROM .*\/.*/a LABEL image_build_date:=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile
            if [ -f "CHANGELOG.md" ] ; then
              echo "adding git_changelog_version"
              sed -i "/FROM .*\/.*/a LABEL git_changelog_version:=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              echo "adding git_tag"
              sed -i "/FROM .*\/.*/a LABEL git_tag:=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              echo "adding git_branch"
              sed -i "/FROM .*\/.*/a LABEL git_branch:=\"${GITHUB_REF#refs/heads/}\"" Dockerfile
            fi

            cat Dockerfile
          fi

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          tags: ${{ steps.prep.outputs.tags }}
