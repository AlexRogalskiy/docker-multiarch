#!/usr/bin/env bash

set +u
: "${DOCKERFILE_PATH:=./Dockerfile}"
: "${IMAGE_NAME:=tiredofit/multiarch}"

echo "variables after applying defaults:"
echo "DOCKERFILE_PATH: $DOCKERFILE_PATH"
echo "IMAGE_NAME:      $IMAGE_NAME"
echo

export PATH="$PWD/docker:$PATH"

# =>
declare -A base_image_prefix_map=( ["aarch64"]="arm64v8/" ["arm"]="arm32v5/" ["ppc64le"]="ppc64le" ["amd64"]="")

# => dpkg -L qemu-user-static | grep /usr/bin/
declare -A docker_qemu_arch_map=( ["aarch64"]="aarch64" ["arm"]="arm" ["amd64"]="x86_64" ["ppc64le"]="ppc64le" )

# => https://github.com/docker/docker-ce/blob/76ac3a4952a9c03f04f26fc88d3160acd51d1702/components/cli/cli/command/manifest/util.go#L22
declare -A docker_to_manifest_map=( ["aarch64"]="arm64" ["arm"]="arm" ["ppc64le"]="ppc64le" ["amd64"]="amd64")

# what we want to build
build_architectures=(amd64 aarch64 arm ppc64le)
verified_build_architectures=()
verified_build_architectures+=("$(docker version -f '{{.Server.Arch}}')")

# what we can build
for arch in ${build_architectures[@]}; do
  if [ -f "qemu-${docker_qemu_arch_map[${arch}]}-static" ]; then
    echo "qemu binary for $arch found";
    verified_build_architectures+=($arch)
  fi
done

echo "Build Architectures ${verified_build_architectures}"
set -u

docker -v
echo
